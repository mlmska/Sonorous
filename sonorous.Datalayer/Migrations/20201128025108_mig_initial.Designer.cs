// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using sonorous.Datalayer.Context;

namespace sonorous.Datalayer.Migrations
{
    [DbContext(typeof(SonorousContext))]
    [Migration("20201128025108_mig_initial")]
    partial class mig_initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("sonorous.Datalayer.Entites.User.Role", b =>
                {
                    b.Property<int>("RoleID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Roletitle")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("RoleID");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("sonorous.Datalayer.Entites.User.User", b =>
                {
                    b.Property<int>("UserID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Activecode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("RegisterDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserAvatar")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("isActive")
                        .HasColumnType("bit");

                    b.HasKey("UserID");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("sonorous.Datalayer.Entites.User.UserRole", b =>
                {
                    b.Property<int>("US_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("RoleID")
                        .HasColumnType("int");

                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.HasKey("US_ID");

                    b.HasIndex("RoleID");

                    b.HasIndex("UserID");

                    b.ToTable("UserRoles");
                });

            modelBuilder.Entity("sonorous.Datalayer.Entites.Wallett.Wallett", b =>
                {
                    b.Property<int>("WallettID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("TypeID")
                        .HasColumnType("int");

                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.Property<int?>("WallettTypeTypeID")
                        .HasColumnType("int");

                    b.Property<bool>("ispay")
                        .HasColumnType("bit");

                    b.HasKey("WallettID");

                    b.HasIndex("UserID");

                    b.HasIndex("WallettTypeTypeID");

                    b.ToTable("Walletts");
                });

            modelBuilder.Entity("sonorous.Datalayer.Entites.Wallett.WallettType", b =>
                {
                    b.Property<int>("TypeID")
                        .HasColumnType("int");

                    b.Property<string>("TypeTitle")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("TypeID");

                    b.ToTable("WallettTypes");

                    b.HasData(
                        new
                        {
                            TypeID = 1,
                            TypeTitle = "واریز"
                        },
                        new
                        {
                            TypeID = 2,
                            TypeTitle = "برداشت"
                        });
                });

            modelBuilder.Entity("sonorous.Datalayer.Entites.User.UserRole", b =>
                {
                    b.HasOne("sonorous.Datalayer.Entites.User.Role", "Role")
                        .WithMany("UserRoles")
                        .HasForeignKey("RoleID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("sonorous.Datalayer.Entites.User.User", "User")
                        .WithMany("UserRoles")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("sonorous.Datalayer.Entites.Wallett.Wallett", b =>
                {
                    b.HasOne("sonorous.Datalayer.Entites.User.User", "User")
                        .WithMany("Walletts")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("sonorous.Datalayer.Entites.Wallett.WallettType", "WallettType")
                        .WithMany("Walletts")
                        .HasForeignKey("WallettTypeTypeID");

                    b.Navigation("User");

                    b.Navigation("WallettType");
                });

            modelBuilder.Entity("sonorous.Datalayer.Entites.User.Role", b =>
                {
                    b.Navigation("UserRoles");
                });

            modelBuilder.Entity("sonorous.Datalayer.Entites.User.User", b =>
                {
                    b.Navigation("UserRoles");

                    b.Navigation("Walletts");
                });

            modelBuilder.Entity("sonorous.Datalayer.Entites.Wallett.WallettType", b =>
                {
                    b.Navigation("Walletts");
                });
#pragma warning restore 612, 618
        }
    }
}
