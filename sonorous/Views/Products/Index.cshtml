@model Tuple<List<sonorous.Core.DTOs.ShowProductListViewModel>,int>
@using sonorous.Datalayer.Entites.Product;
@{
    ViewData["Title"] = "Index";
}

<div id="container" class="container">
    <form id="formfilter" action="/Products" method="get">
        <input type="hidden" name="pageid" id="pageid" value="@ViewBag.pageid.ToString()" />
        <section class="term-categories">
            <div class="top-bar">
                <header>
                    <h1> دوره های <span> برنامه نویسی وب </span> </h1> <span> 123 دوره </span>
                </header>
                <div class="row">
                    <div class="col-md-4 col-sm-12 col-xs-12 pull-right"> 
                            <div class="input search">
                                <input type="text" name="filter" placeholder="موضوع مورد نظر ...">
                                <button><i class="zmdi zmdi-search"></i></button>
                            </div>
                    </div>
                    <div class="col-md-4 col-sm-6 col-xs-12 pull-right">
                        <div class="switch-field available">
                            <input id="available-filter-1" name="gettype" value="all" checked="" type="radio">
                            <label for="available-filter-1"> همه </label>
                            <input id="available-filter-2" name="gettype" value="bestseller" type="radio">
                            <label for="available-filter-2"> پرفروش </label>
                            <input id="available-filter-3" name="gettype" value="expensive" type="radio">
                            <label for="available-filter-3"> گران ترین </label>
                            <input id="available-filter-4" name="gettype" value="visit" type="radio">
                            <label for="available-filter-4">پر بازدید ترین </label>
                        </div>
                    </div>
                    <div class="col-md-4 col-sm-6 col-xs-12 pull-left">
                        <div class="select-ddl">
                            <select name="orderbytype">
                                <option value="date"> تاریخ انتشار </option>
                                <option value="updatedate"> تخفیف </option>
                            </select>
                        </div>
                    </div>
                </div>
            </div>

            <div class="row">
                <aside class="col-lg-3 col-md-4 col-sm-12 col-xs-12">
                    <section class="aside-section filter-by-price">
                        <header><h3> فیلتر بر اساس قیمت </h3></header>
                        <div class="price-range">
                            <input type="hidden" value="" id="min-value" name="startprice">
                            <input type="hidden" value="" id="max-value" name="endprice">
                            <div class="price-bar"><div id="priceFilter"></div></div>
                            <div class="max-price">تا <span id="max-text">500000</span> تومان</div>
                            <div class="min-price">از <span id="min-text">20000</span> تومان</div>
                            <div class="clearfix"></div>
                        </div>
                    </section>

                    <section class="aside-section filter-by-category">
                        <header>
                            <h3> دسته بندی موضوعات </h3>
                        </header>
                        <div class="inner">
                            @{
                                List<Product_Group> groups = ViewBag.groups as List<Product_Group>;
                                List<int> selected = ViewBag.selectedgroups as List<int>;

                            }
                            <ul>
                                @foreach (var item in groups.Where(p=>p.ParentID==null))
                                {
                                    <li>
                                        <input onchange="changegroups()" @((selected.Any(s => s == item.GroupID) ? "checked":"")) type="checkbox" name="selectedGroups" value="@item.GroupID" id="cat-1">
                                        <label for="cat-1"> @item.GroupTitle </label>
                                        @if (groups.Any(p => p.ParentID == item.GroupID))
                                        {
                                    <ul>
                                        @foreach (var sub in groups.Where(p => p.ParentID == item.GroupID))
                                        {
                                        <li>
                                            <input onchange="changegroups()" @((selected.Any(s => s == sub.GroupID) ? "checked":"")) type="checkbox" name="selectedGroups" value="@sub.GroupID" id="cat-1">
                                            <label for="cat-1"> @sub.GroupTitle </label>
                                        </li>
                                        }

                                    </ul>
                                        }
                                    </li>
                                }

                            </ul>
                        </div>
                    </section>

                </aside>
                <div class="col-lg-9 col-md-8 col-sm-12 col-xs-12">
                    <section class="terms-items">
                        <div class="row">
                            <div class="cards-section">
                               @foreach (var item in Model.Item1)
                               {
                                   <partial name="_BoxProduct" model="@item" />
                               }


                            </div>


                        </div>


                        @if (Model.Item2>1)
                        {
                    <nav aria-label="Page navigation">
                        <ul class="pagination justify-content-center">

                            @for (int i=1; i <= Model.Item2; i++)
                            {
                                <li class="page-item"><a class="page-link" onclick="changepage(@i)">@i</a></li>
                            }


                        </ul>
                    </nav>
                        }

                    </section>

                </div>
            </div>
        </section>
    </form> 
</div>

@section Scripts
{
    <script src="/noUiSlider/nouislider.min.js"></script>
    <script src="/js/scriptss.js"></script>
    <script type="text/javascript">
        $(function () {

            var slider = document.getElementById('priceFilter');
            noUiSlider.create(slider, {
                start: [20000, 100000],
                step: 5000,
                connect: true,
                direction: 'rtl',
                range: {
                    'min': 20000,
                    'max': 100000
                }
            });

            var marginMin = document.getElementById('min-text'),
                marginMax = document.getElementById('max-text');

            slider.noUiSlider.on('update', function (values, handle) {
                var xvalue = Math.round(values[handle]);
                if (handle) {
                    marginMax.innerHTML = xvalue;
                } else {
                    marginMin.innerHTML = xvalue;
                }
                //console.log(values[handle]);
            });

            slider.noUiSlider.on('change', function (values, handle) {
                var xvalue = Math.round(values[handle]);
                if (handle) {
                    // setGetParameter('max_price', xvalue);
                    $('#max-value').val(xvalue);
                } else {
                    // setGetParameter('min_price', xvalue);
                    $('#min-value').val(xvalue);
                }
            });


            slider.noUiSlider.on('slide', function (values, handle) {

                console.log(values[0]);
                console.log(values[1]);

                var xvalue = Math.round(values[handle]);
                //updateSliderRange( Math.round(values[0]), Math.round(values[1]) );
            });

          


            function updateSliderRange(min, max) {
                slider.noUiSlider.updateOptions({
                    range: {
                        'min': min,
                        'max': max
                    }
                });
            }
        });
        function changegroups() {
            $("#formfilter").submit();
        }

        function changepage(pageid) {
            $("#pageid").val(pageid);
            $("#formfilter").submit();
        }
    </script>

}
